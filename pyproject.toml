[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "seton-package-template"
version = "0.1.0"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
description = "A template for creating Seton ecosystem packages"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Education",
]
keywords = ["seton", "education", "data", "automation"]

dependencies = [
    "pandas>=1.3.0",
    "openpyxl>=3.0.9",
    "google-auth>=2.0.0",
    "google-auth-oauthlib>=0.5.0",
    "google-auth-httplib2>=0.1.0",
    "google-api-python-client>=2.0.0",
    "gspread>=5.0.0",
    "cx_Oracle>=8.3.0",
    "python-dotenv>=0.19.0",
    "requests>=2.25.0",
    "pydantic>=1.8.0",
    "structlog>=21.1.0",
    "pyyaml>=5.4.0",
    "python-dateutil>=2.8.0",
    "tenacity>=8.0.0",
    "orjson>=3.6.0",
    "tqdm>=4.60.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "black>=21.0.0",
    "isort>=5.9.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "bandit>=1.7.0",
    "safety>=1.10.0",
    "pre-commit>=2.15.0",
    "ipython>=7.25.0",
]
testing = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "faker>=8.10.0",
    "factory-boy>=3.2.0",
    "responses>=0.13.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
    "sphinx-autodoc-typehints>=1.12.0",
]

[project.urls]
"Homepage" = "https://github.com/JackJosephWright/seton_pipeline_template"
"Bug Reports" = "https://github.com/JackJosephWright/seton_pipeline_template/issues"
"Source" = "https://github.com/JackJosephWright/seton_pipeline_template"
"Documentation" = "https://github.com/JackJosephWright/seton_pipeline_template/blob/main/README.md"

[project.scripts]
seton-package-template = "seton_package_template.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cx_Oracle.*",
    "gspread.*",
    "seton_utils.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "database: marks tests that require database connection",
    "sheets: marks tests that require Google Sheets access",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]
